[{"path":"http://oliverws.github.io/TVDSM/authors.html","id":null,"dir":"","previous_headings":"","what":"Authors","title":"Authors and Citation","text":". Maintainer.","code":""},{"path":"http://oliverws.github.io/TVDSM/authors.html","id":"citation","dir":"","previous_headings":"","what":"Citation","title":"Authors and Citation","text":"Palumbo OSW&R (2025). tvdsm: R Package Time-Varying Dynamic State Models. R package version 1.4.1, http://oliverws.github.io/TVDSM/.","code":"@Manual{,   title = {tvdsm: R Package for Time-Varying Dynamic State Models},   author = {Oliver Saunders Wilder & Richard Palumbo},   year = {2025},   note = {R package version 1.4.1},   url = {http://oliverws.github.io/TVDSM/}, }"},{"path":"http://oliverws.github.io/TVDSM/index.html","id":"tvdsm-tools-for-dyadic-data-analysis","dir":"","previous_headings":"","what":"R Package for Time-Varying Dynamic State Models","title":"R Package for Time-Varying Dynamic State Models","text":"tvdsm R package designed help analyze dyadic data efficiently. README serves main page pkgdown website provides support documentation including quick examples guidance using key function analyzeDyad. information package can found https://oliverws.github.io/TVDSM/. read -depth information TVDSM approach, please see Saunders Wilder, O (2017).","code":""},{"path":"http://oliverws.github.io/TVDSM/index.html","id":"quick-start","dir":"","previous_headings":"","what":"Quick Start","title":"R Package for Time-Varying Dynamic State Models","text":"simple example using analyzeDyad analyze dyadic data:","code":"# Load the tvdsm package library(tvdsm)   # Run the analysis using analyzeDyad PersonA <- read.csv(\"PersonA.csv\") PersonB <- read.csv(\"PersonB.csv\") dyad <- as.dyad(PersonA, PersonB, cols = c(\"EDA\"))  result <- analyzeDyad(dyad=dyad, window_size=60, lag=0, measure=\"EDA\")"},{"path":"http://oliverws.github.io/TVDSM/index.html","id":"what-does-analyzedyad-do","dir":"","previous_headings":"","what":"What does analyzeDyad do?","title":"R Package for Time-Varying Dynamic State Models","text":"analyzeDyad function performs following steps: Data Processing: Cleans pre-processes dyadic data analysis. Statistical Analysis: Applies chosen method (e.g., “default”) uncover patterns relationships data. Output Generation: Produces summary analysis including statistical measures, model fits, diagnostic plots. example, output typically includes: summary table fit indices parameter estimates. Diagnostic plots assessing model assumptions fit. Additional supporting metrics help interpret analysis results.","code":""},{"path":"http://oliverws.github.io/TVDSM/index.html","id":"learn-more-and-get-help","dir":"","previous_headings":"","what":"Learn More and Get Help","title":"R Package for Time-Varying Dynamic State Models","text":"detailed documentation support, please visit Documentation Site tvdsm maintained Oliver Saunders Wilder, PhD. Contributions issues welcome!","code":""},{"path":"http://oliverws.github.io/TVDSM/reference/analyzeDyad.html","id":null,"dir":"Reference","previous_headings":"","what":"Analyze dyad data for TVDSM analysis — analyzeDyad","title":"Analyze dyad data for TVDSM analysis — analyzeDyad","text":"Processes two participant datasets dyad object, performs TVDSM analysis, generates plots, returns model summaries.","code":""},{"path":"http://oliverws.github.io/TVDSM/reference/analyzeDyad.html","id":"ref-usage","dir":"Reference","previous_headings":"","what":"Usage","title":"Analyze dyad data for TVDSM analysis — analyzeDyad","text":"","code":"analyzeDyad(   f1 = \"\",   f2 = \"\",   dyad = c(),   xname = f1,   yname = f2,   norm = F,   window_size = 60 * 5,   window_step = window_size,   start = \"\",   end = \"\",   func = fitDSModelForDyad,   na.rm = T,   simulate = F,   dname = paste(xname, yname, sep = \"+\"),   lag = 0,   noPlots = F,   plotParams = T,   pltTitle = paste(dname, \"(\", \"Lag\", \"=\", lag, \")\"),   measure = \"EDA\",   type = 4,   downsample = 1,   x.baseline = NA,   y.baseline = NA,   verbose = F,   codes = \"\",   useRealTime = F,   incTSD = T,   ... )"},{"path":"http://oliverws.github.io/TVDSM/reference/analyzeDyad.html","id":"arguments","dir":"Reference","previous_headings":"","what":"Arguments","title":"Analyze dyad data for TVDSM analysis — analyzeDyad","text":"f1 File path participant 1. f2 File path participant 2. dyad Optional dyad object. xname Friendly name participant 1. yname Friendly name participant 2. norm Logical, whether standardize data. window_size Window size seconds. window_step Step size seconds. start Start time analysis. end End time analysis. func Function model fitting (default fitDSModelForDyad). na.rm Logical. simulate Logical, whether simulate dyad. dname Friendly name dyad. lag Lag value analysis. noPlots Logical, TRUE, plots produced. plotParams Logical, whether include model parameter plots. pltTitle Title plots. measure Measurement column name. type Model type. downsample Downsampling factor. x.baseline Baseline participant 1. y.baseline Baseline participant 2. verbose Logical, whether verbose. codes File path condition codes. useRealTime Logical, whether interpret condition codes real time. incTSD Logical, whether include time series descriptives. ... Additional arguments.","code":""},{"path":"http://oliverws.github.io/TVDSM/reference/analyzeDyad.html","id":"value","dir":"Reference","previous_headings":"","what":"Value","title":"Analyze dyad data for TVDSM analysis — analyzeDyad","text":"list containing TVDSM model outputs, summary, plots.","code":""}]
